@model IEnumerable<Client.Models.Faculty>

@{
    ViewData["Title"] = "Faculties List";
}

<div class="my-3 d-md-flex justify-content-evenly">
    <div class="flex-grow-1 display-6 text-sm-center text-primary opacity-75">Faculty List</div>
    <div class="text-end">
        <a asp-controller="Faculty" asp-action="Create" class="btn btn-primary">New Faculty</a>
    </div>
</div>

@if (Model.Count() < 1) {
    <h2 class="display-6 mt-3 text-center text-danger">Not faculties yet</h2>
} else {
    <div class="table-responsive">
        <table class="table table-dark table-striped table-hover">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.Name)</th>
                    <th>@Html.DisplayNameFor(m => m.Code)</th>
                    <th>Mantainers</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model) {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Code</td>
                        <td>
                            <a asp-controller="Faculty" asp-action="Edit" asp-route-Id="@item.Id" class="btn btn-primary">Edit</a>
                            <a asp-controller="Faculty" asp-action="Details" asp-route-Id="@item.Id" class="btn btn-secondary">Details</a>
                            <a asp-controller="Faculty" asp-action="Delete" asp-route-Id="@item.Id" class="btn btn-danger">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}


@section scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}